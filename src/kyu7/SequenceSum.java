package kyu7;

import java.util.Arrays;
import java.util.Scanner;

/**
 * A sequence or a series, in mathematics, is a string of objects, like numbers,
 * that follow a particular pattern. The individual elements in a sequence are
 * called terms. A simple example is 3, 6, 9, 12, 15, 18, 21, ..., where the
 * pattern is: "add 3 to the previous term".
 * 
 * In this kata, we will be using a more complicated sequence: 0, 1, 3, 6, 10,
 * 15, 21, 28, ... This sequence is generated with the pattern: "the nth term is
 * the sum of numbers from 0 to n, inclusive".
 * 
 * [ 0, 1, 3, 6, ...]
 * 0 0+1 0+1+2 0+1+2+3
 * Your Task
 * Complete the function that takes an integer n and returns a list/array of
 * length abs(n) + 1 of the arithmetic series explained above. Whenn < 0 return
 * the sequence with negative terms.
 * 
 * Examples
 * 5 --> [0, 1, 3, 6, 10, 15]
 * -5 --> [0, -1, -3, -6, -10, -15]
 * 7 --> [0, 1, 3, 6, 10, 15, 21, 28]
 */

public class SequenceSum {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = Integer.valueOf(sc.nextLine());
        sc.close();
        System.out.println(Arrays.toString(sumOfN(n)));
    }

    public static int[] sumOfN(int n) {
        int[] temp = new int[Math.abs(n) + 1];
        for (int i = 0; i < temp.length; i++) {
            if (n > 0) {
                temp[i] = i;
            } else {
                temp[i] = -i;
            }
        }
        int[] ans = new int[temp.length];
        for (int i = 0; i < ans.length; i++) {
            if (i == 0) {
                ans[i] = temp[i];
            } else {
                ans[i] = ans[i - 1] + temp[i];
            }
        }
        return ans; // Generated by die roll; guaranteed to be random
    }
}
